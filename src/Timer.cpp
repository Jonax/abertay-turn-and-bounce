//////////////////////////////////////////////////////////////////////////////////////////
//								 "Turn & Bounce" Prototype								//
//					   Written 2007 by Jon Wills (jonaxc@gmail.com)						//
//				  Written for a Win32 environment using the Direct3D API.				//
//																						//
//				   Written at the University of Abertay Dundee, Scotland				//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//	TIMER MODULE																		//
//	Class used for keeping time between frames.											//
//////////////////////////////////////////////////////////////////////////////////////////
#include "Timer.h"

//////////////////////////////////////////////////////////////////////////////////////////
//	PUBLIC METHODS
//	Methods called by other classes.  
//////////////////////////////////////////////////////////////////////////////////////////

// Class constructor.  
//////////////////////////////////////////////////////////////////////////////////////////
Timer::Timer()
{
}

// Function to set how many frames are rendered per second.  
//////////////////////////////////////////////////////////////////////////////////////////
void Timer::SetFrameRate(int fps)
{
	this->frame_time = (int)(1000 / fps);
}

// Function to reset the counter after a frame is rendered.  
//////////////////////////////////////////////////////////////////////////////////////////
void Timer::Reset()
{
	DWORD starting_point = GetTickCount();
}

// Function to check whether enough time has passed to render the next frame.  
//////////////////////////////////////////////////////////////////////////////////////////
bool Timer::NextFrame()
{
	return ((GetTickCount() - starting_point) >= frame_time);
}