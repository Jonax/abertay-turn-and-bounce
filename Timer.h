//////////////////////////////////////////////////////////////////////////////////////////
//								 "Turn & Bounce" Prototype								//
//					   Written 2007 by Jon Wills (jonaxc@gmail.com)						//
//				  Written for a Win32 environment using the Direct3D API.				//
//																						//
//				   Written at the University of Abertay Dundee, Scotland				//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//	TIMER MODULE																		//
//	Class used for keeping time between frames.											//
//////////////////////////////////////////////////////////////////////////////////////////
#ifndef _TIMER_H_
#define _TIMER_H_

//////////////////////////////////////////////////////////////////////////////////////////
//	LIBRARY INCLUDES
//	The libraries & namespaces required for the module.  
//////////////////////////////////////////////////////////////////////////////////////////
#include <windows.h>		// Standard Win32 library.  

//////////////////////////////////////////////////////////////////////////////////////////
//	CLASS HEADER
//	Declaration of all required class methods and data.  The code for the methods is 
//	detailed in the module's source file.  
//////////////////////////////////////////////////////////////////////////////////////////
class Timer
{
	public:
		Timer();					// Class constructor.  

		void SetFrameRate(int fps);	// Sets the FPS for the application.  
		void Reset();				// Resets the counter of time between frames.  
		bool NextFrame();			// Checks whether to render the next frame.  

	//////////////////////////////////////////////////////////////////////////////////////
	//	CLASS OBJECTS
	//////////////////////////////////////////////////////////////////////////////////////
	private:
		DWORD starting_point;		// The time since the last frame was renderer;  

		int frame_time;				// The time in milliseconds for each frame.  
};

#endif